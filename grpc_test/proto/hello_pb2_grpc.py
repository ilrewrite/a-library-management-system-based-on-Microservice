# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_test.proto import hello_pb2 as grpc__test_dot_proto_dot_hello__pb2


class BookManagerStub(object):
    """service Greet{
    rpc greet (HelloRequest) returns (HelloAnwser);
    rpc greet2 (HelloRequest) returns (HelloAnwser);
    }

    message HelloRequest{
    string hello=1;
    }

    message HelloAnwser{
    string hi=1;
    }

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add = channel.unary_unary(
                '/BookManager/add',
                request_serializer=grpc__test_dot_proto_dot_hello__pb2.Book.SerializeToString,
                response_deserializer=grpc__test_dot_proto_dot_hello__pb2.State.FromString,
                )
        self.queryByID = channel.unary_unary(
                '/BookManager/queryByID',
                request_serializer=grpc__test_dot_proto_dot_hello__pb2.bookID.SerializeToString,
                response_deserializer=grpc__test_dot_proto_dot_hello__pb2.Book.FromString,
                )
        self.queryByName = channel.unary_unary(
                '/BookManager/queryByName',
                request_serializer=grpc__test_dot_proto_dot_hello__pb2.Bookname.SerializeToString,
                response_deserializer=grpc__test_dot_proto_dot_hello__pb2.BookList.FromString,
                )
        self.delete = channel.unary_unary(
                '/BookManager/delete',
                request_serializer=grpc__test_dot_proto_dot_hello__pb2.bookID.SerializeToString,
                response_deserializer=grpc__test_dot_proto_dot_hello__pb2.State.FromString,
                )


class BookManagerServicer(object):
    """service Greet{
    rpc greet (HelloRequest) returns (HelloAnwser);
    rpc greet2 (HelloRequest) returns (HelloAnwser);
    }

    message HelloRequest{
    string hello=1;
    }

    message HelloAnwser{
    string hi=1;
    }

    """

    def add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def queryByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def queryByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add': grpc.unary_unary_rpc_method_handler(
                    servicer.add,
                    request_deserializer=grpc__test_dot_proto_dot_hello__pb2.Book.FromString,
                    response_serializer=grpc__test_dot_proto_dot_hello__pb2.State.SerializeToString,
            ),
            'queryByID': grpc.unary_unary_rpc_method_handler(
                    servicer.queryByID,
                    request_deserializer=grpc__test_dot_proto_dot_hello__pb2.bookID.FromString,
                    response_serializer=grpc__test_dot_proto_dot_hello__pb2.Book.SerializeToString,
            ),
            'queryByName': grpc.unary_unary_rpc_method_handler(
                    servicer.queryByName,
                    request_deserializer=grpc__test_dot_proto_dot_hello__pb2.Bookname.FromString,
                    response_serializer=grpc__test_dot_proto_dot_hello__pb2.BookList.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=grpc__test_dot_proto_dot_hello__pb2.bookID.FromString,
                    response_serializer=grpc__test_dot_proto_dot_hello__pb2.State.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BookManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BookManager(object):
    """service Greet{
    rpc greet (HelloRequest) returns (HelloAnwser);
    rpc greet2 (HelloRequest) returns (HelloAnwser);
    }

    message HelloRequest{
    string hello=1;
    }

    message HelloAnwser{
    string hi=1;
    }

    """

    @staticmethod
    def add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookManager/add',
            grpc__test_dot_proto_dot_hello__pb2.Book.SerializeToString,
            grpc__test_dot_proto_dot_hello__pb2.State.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def queryByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookManager/queryByID',
            grpc__test_dot_proto_dot_hello__pb2.bookID.SerializeToString,
            grpc__test_dot_proto_dot_hello__pb2.Book.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def queryByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookManager/queryByName',
            grpc__test_dot_proto_dot_hello__pb2.Bookname.SerializeToString,
            grpc__test_dot_proto_dot_hello__pb2.BookList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookManager/delete',
            grpc__test_dot_proto_dot_hello__pb2.bookID.SerializeToString,
            grpc__test_dot_proto_dot_hello__pb2.State.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
